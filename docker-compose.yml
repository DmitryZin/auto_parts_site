version: "3.9"

networks:
  postgres:
    driver: bridge


services:
  postgres:
    container_name: postgres_container
    image: postgres:15.1-alpine
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "site"
      POSTGRES_USER: "db_user"
      POSTGRES_PASSWORD: "db_password"
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U db_user -d site"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres
  auto_part_site:
    container_name: auto_part-site
    build:
      context: .
      dockerfile: Dockerfile
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 1024M
    environment:
      DATASOURCE_URL: "jdbc:postgresql://postgres_container:5432/site"
      DATASOURCE_USER: "db_user"
      DATASOURCE_PASS: "db_password"
    ports:
      - "8070:8080"
    restart: always
    networks:
      - postgres
